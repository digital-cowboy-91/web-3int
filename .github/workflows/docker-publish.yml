name: CD

# 1
on:
  workflow_dispatch:

# 2
env:
  REGISTRY: ${{ secrets.DO_REGISTRY }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}
  DO_REG_IMAGE: '${{ secrets.DO_REGISTRY }}/${{ vars.IMAGE_NAME }}'
  
  WORKDIR: '/sources/${{ vars.IMAGE_NAME }}'
  SSH_CONN: '${{ secrets.DO_USERNAME }}@${{ secrets.DO_HOST }}'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Compute additional env variables
        run: |
          echo "REPO_NAME=$(echo $GITHUB_REPOSITORY | cut -d '/' -f 2)" >> $GITHUB_ENV
      - name: (debug) List all env vars
        run: printenv
      - name: Checkout the repo 
        uses: actions/checkout@v2
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval `ssh-agent`
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DO_HOST }} >> ~/.ssh/known_hosts
      # - name: Test connection
      #   run: |
      #     ssh ${{ env.SSH_CONN }} 'cd / && ls -l'
      - name: Establish connection and recreate workdir
        run: ssh ${{ env.SSH_CONN }} 'rm -rv ${{ env.WORKDIR }} && mkdir ${{ env.WORKDIR }}'
      - name: Transfer docker compose
        run: scp ./dc.prod.yml ${{ env.SSH_CONN }}:${{ env.WORKDIR }}
      - name: Generate .env file
        run: |
          ssh ${{ env.SSH_CONN }} << EOF
          cd ${{ env.WORKDIR }}
          echo PROJECT_NAME=${{ env.REPO_NAME }} >> .env
          echo KEY=${{ secrets.CMS_KEY }} >> .env
          echo SECRET=${{ secrets.CMS_SECRET }} >> .env
          EOF
      
      # - name: Copy docker-compose file to VPS
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.DO_HOST }}
      #     username: ${{ secrets.DO_USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     source: "docker-compose.yml"
      #     target: ${{ env.WORKDIR }}
      #     rm: true
      # - name: Deploy to Digital Ocean droplet via SSH action
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.DO_HOST }}
      #     username: ${{ secrets.DO_USERNAME }}
      #     key: ${{ secrets.SSH_KEY }}
      #     script: |
      #       cd ${{ env.WORKDIR }}
      #       ls -l
